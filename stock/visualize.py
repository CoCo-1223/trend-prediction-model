# -*- coding: utf-8 -*-
"""visualize.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1srUFSVro9S6mSRP-GeRHOEMjw7G4NwOE
"""

import pandas as pd
import matplotlib.pyplot as plt
from google.colab import files

# 애플과 삼성 데이터 파일 리스트
apple_file_paths = ['/content/Apple Stock Price History_2021.csv',
                    '/content/Apple Stock Price History_2022.csv',
                    '/content/Apple Stock Price History_2023.csv',
                    '/content/Apple Stock Price History_2024.csv']

samsung_files = ['/content/Samsung_2021.csv',
                 '/content/Samsung2022.csv',
                 '/content/Samsung2023.csv',
                 '/content/Samsung2024.csv']

# 애플 데이터 읽기
df_apple_list = [pd.read_csv(file, encoding='ISO-8859-1') for file in apple_file_paths]
df_apple = pd.concat(df_apple_list, ignore_index=True)

# 삼성 데이터 읽기
# 인코딩 주의해서 불러오기
df_samsung_list = [pd.read_csv(file, encoding='cp949') for file in samsung_files]
df_samsung = pd.concat(df_samsung_list, ignore_index=True)

# 날짜 처리
df_apple['Date'] = pd.to_datetime(df_apple['Date'])
df_samsung['Date'] = pd.to_datetime(df_samsung['Date'])

# 날짜를 인덱스로 설정
df_apple.set_index('Date', inplace=True)
df_samsung.set_index('Date', inplace=True)

# 연도별 시각화
for year in range(2021, 2025):
    # 애플 데이터 필터링
    df_apple_year = df_apple[df_apple.index.year == year]

    # 삼성 데이터 필터링
    df_samsung_year = df_samsung[df_samsung.index.year == year]

    # 애플 주식 시각화
    plt.figure(figsize=(14, 6))
    plt.plot(df_apple_year['Close'], label=f'Apple {year} Closing Price', color='blue')
    plt.title(f"Apple Stock Closing Price - {year}")
    plt.xlabel("Date")
    plt.ylabel("Price (USD)")
    plt.legend()
    plt.grid(True)
    plt.show()

    # 삼성 주식 시각화
    plt.figure(figsize=(14, 6))
    plt.plot(df_samsung_year['Close'], label=f'Samsung {year} Closing Price', color='green')
    plt.title(f"Samsung Stock Closing Price - {year}")
    plt.xlabel("Date")
    plt.ylabel("Price (KRW)")
    plt.legend()
    plt.grid(True)
    plt.show()

import pandas as pd
import matplotlib.pyplot as plt
from google.colab import files

# 애플 파일 경로
apple_file_paths = [
    '/content/Apple Stock Price History_2021.csv',
    '/content/Apple Stock Price History_2022.csv',
    '/content/Apple Stock Price History_2023.csv',
    '/content/Apple Stock Price History_2024.csv'
]

# 파일 읽기
df_apple_list = [pd.read_csv(file) for file in apple_file_paths]

# 하나로 합치기
df_apple = pd.concat(df_apple_list, ignore_index=True)

# 날짜 처리
df_apple['Date'] = pd.to_datetime(df_apple['Date'])
df_apple.set_index('Date', inplace=True)
df_apple.sort_index(inplace=True)

# 연도별 그래프 저장 및 다운로드
for year in range(2021, 2025):
    df_year = df_apple[df_apple.index.year == year]

    plt.figure(figsize=(14, 6))
    plt.plot(df_year['Close'], label=f'Apple {year} Closing Price', color='blue')
    plt.title(f'Apple Stock Closing Price - {year}')
    plt.xlabel('Date')
    plt.ylabel('Price (USD)')
    plt.legend()
    plt.grid(True)

    # 파일 이름 지정 후 저장
    filename = f'apple_stock_{year}.png'
    plt.savefig(filename)
    plt.close()

    # 다운로드
    files.download(filename)

import pandas as pd
import matplotlib.pyplot as plt
from google.colab import files

# 삼성전자 CSV 파일 경로 리스트 (본인에 맞게 경로 조정)
samsung_file_paths = [
    '/content/Samsung_2021.csv',
    '/content/Samsung2022.csv',
    '/content/Samsung2023.csv',
    '/content/Samsung2024.csv'
]

# CSV 파일 읽기
df_samsung_list = [pd.read_csv(file) for file in samsung_file_paths]
df_samsung = pd.concat(df_samsung_list, ignore_index=True)

# 날짜 처리
df_samsung['Date'] = pd.to_datetime(df_samsung['Date'])
df_samsung.set_index('Date', inplace=True)
df_samsung.sort_index(inplace=True)

# 연도별 그래프를 이미지로 저장하고 다운로드
for year in range(2021, 2025):
    df_year = df_samsung[df_samsung.index.year == year]

    plt.figure(figsize=(14, 6))
    plt.plot(df_year['Close'], label=f'Samsung {year} Closing Price', color='green')
    plt.title(f"Samsung Electronics Closing Price - {year}")
    plt.xlabel("Date")
    plt.ylabel("Price (KRW)")
    plt.legend()
    plt.grid(True)

    # 파일 이름 지정
    file_name = f'samsung_{year}_closing_price.png'
    file_path = f'/content/{file_name}'

    # 이미지 저장
    plt.savefig(file_path)
    plt.close()

    # 다운로드
    files.download(file_path)